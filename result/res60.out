CifarResNet : Depth : 20 , Layers for each block : 3
/home/asrakin/updating/github/model.py:312: UserWarning: nn.init.kaiming_normal is now deprecated in favor of nn.init.kaiming_normal_.
  init.kaiming_normal(m.weight)
Files already downloaded and verified
torch.Size([16, 3, 3, 3]) 1
torch.Size([16, 16, 3, 3]) 2
torch.Size([16, 16, 3, 3]) 3
torch.Size([16, 16, 3, 3]) 4
torch.Size([16, 16, 3, 3]) 5
torch.Size([16, 16, 3, 3]) 6
torch.Size([16, 16, 3, 3]) 7
torch.Size([32, 16, 3, 3]) 8
torch.Size([32, 32, 3, 3]) 9
torch.Size([32, 32, 3, 3]) 10
torch.Size([32, 32, 3, 3]) 11
torch.Size([32, 32, 3, 3]) 12
torch.Size([32, 32, 3, 3]) 13
torch.Size([64, 32, 3, 3]) 14
torch.Size([64, 64, 3, 3]) 15
torch.Size([64, 64, 3, 3]) 16
torch.Size([64, 64, 3, 3]) 17
torch.Size([64, 64, 3, 3]) 18
torch.Size([64, 64, 3, 3]) 19
torch.Size([10, 64]) 20

Test set: Average loss: 0.0013, Accuracy: 9077/10000 (90.7700%)

torch.Size([500])
torch.Size([20, 36864])
epoch: 1
Number of layers: 20

Test set: Average loss: 0.0013, Accuracy: 9077/10000 (90.7700%)


Test set: Average loss: 0.0005, Accuracy: 465/5000.0 (93.0000%)

epoch: 2
Number of layers: 20
0
Old value, new value:
tensor(-46., device='cuda:0') tensor(98., device='cuda:0')
Old value, new value:
tensor(53., device='cuda:0') tensor(-70., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(20, dtype=torch.int32)

Test set: Average loss: 0.0016, Accuracy: 8926/10000 (89.2600%)


Test set: Average loss: 0.0006, Accuracy: 460/5000.0 (92.0000%)

epoch: 3
Number of layers: 20
0
Old value, new value:
tensor(14., device='cuda:0') tensor(-1., device='cuda:0')
Old value, new value:
tensor(-3., device='cuda:0') tensor(-4., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(79, dtype=torch.int32)

Test set: Average loss: 0.0016, Accuracy: 8886/10000 (88.8600%)


Test set: Average loss: 0.0011, Accuracy: 432/5000.0 (86.4000%)

epoch: 4
Number of layers: 20
0
Old value, new value:
tensor(44., device='cuda:0') tensor(78., device='cuda:0')
Old value, new value:
tensor(2., device='cuda:0') tensor(102., device='cuda:0')
Layer numer, Index Number:  tensor(5, dtype=torch.int32) tensor(59, dtype=torch.int32)

Test set: Average loss: 0.0018, Accuracy: 8778/10000 (87.7800%)


Test set: Average loss: 0.0013, Accuracy: 415/5000.0 (83.0000%)

epoch: 5
Number of layers: 20
0
Old value, new value:
tensor(-67., device='cuda:0') tensor(-30., device='cuda:0')
Old value, new value:
tensor(-124., device='cuda:0') tensor(-44., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(180, dtype=torch.int32)

Test set: Average loss: 0.0023, Accuracy: 8496/10000 (84.9600%)


Test set: Average loss: 0.0018, Accuracy: 386/5000.0 (77.2000%)

epoch: 6
Number of layers: 20
0
Old value, new value:
tensor(-43., device='cuda:0') tensor(-24., device='cuda:0')
Old value, new value:
tensor(-70., device='cuda:0') tensor(78., device='cuda:0')
Layer numer, Index Number:  tensor(5, dtype=torch.int32) tensor(56, dtype=torch.int32)

Test set: Average loss: 0.0030, Accuracy: 8054/10000 (80.5400%)


Test set: Average loss: 0.0027, Accuracy: 342/5000.0 (68.4000%)

epoch: 7
Number of layers: 20

Test set: Average loss: 0.0030, Accuracy: 8054/10000 (80.5400%)


Test set: Average loss: 0.0027, Accuracy: 342/5000.0 (68.4000%)

epoch: 8
Number of layers: 20
1
Old value, new value:
tensor(61., device='cuda:0') tensor(-65., device='cuda:0')
Old value, new value:
tensor(-4., device='cuda:0') tensor(23., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(354, dtype=torch.int32)

Test set: Average loss: 0.0033, Accuracy: 7959/10000 (79.5900%)


Test set: Average loss: 0.0033, Accuracy: 318/5000.0 (63.6000%)

epoch: 9
Number of layers: 20

Test set: Average loss: 0.0033, Accuracy: 7959/10000 (79.5900%)


Test set: Average loss: 0.0033, Accuracy: 318/5000.0 (63.6000%)

epoch: 10
Number of layers: 20
0
Old value, new value:
tensor(39., device='cuda:0') tensor(-22., device='cuda:0')
Old value, new value:
tensor(8., device='cuda:0') tensor(-65., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(351, dtype=torch.int32)

Test set: Average loss: 0.0046, Accuracy: 7395/10000 (73.9500%)


Test set: Average loss: 0.0049, Accuracy: 252/5000.0 (50.4000%)

epoch: 11
Number of layers: 20
0
Old value, new value:
tensor(98., device='cuda:0') tensor(-9., device='cuda:0')
Old value, new value:
tensor(16., device='cuda:0') tensor(-60., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(13, dtype=torch.int32)

Test set: Average loss: 0.0054, Accuracy: 7086/10000 (70.8600%)


Test set: Average loss: 0.0063, Accuracy: 220/5000.0 (44.0000%)

epoch: 12
Number of layers: 20
0
Old value, new value:
tensor(-44., device='cuda:0') tensor(3., device='cuda:0')
Old value, new value:
tensor(-57., device='cuda:0') tensor(57., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(183, dtype=torch.int32)

Test set: Average loss: 0.0063, Accuracy: 6597/10000 (65.9700%)


Test set: Average loss: 0.0068, Accuracy: 169/5000.0 (33.8000%)

epoch: 13
Number of layers: 20
0
Old value, new value:
tensor(-19., device='cuda:0') tensor(16., device='cuda:0')
Old value, new value:
tensor(-48., device='cuda:0') tensor(53., device='cuda:0')
Layer numer, Index Number:  tensor(7, dtype=torch.int32) tensor(1789, dtype=torch.int32)

Test set: Average loss: 0.0075, Accuracy: 6224/10000 (62.2400%)


Test set: Average loss: 0.0085, Accuracy: 137/5000.0 (27.4000%)

epoch: 14
Number of layers: 20
0
Old value, new value:
tensor(-28., device='cuda:0') tensor(-10., device='cuda:0')
Old value, new value:
tensor(-54., device='cuda:0') tensor(10., device='cuda:0')
Layer numer, Index Number:  tensor(9, dtype=torch.int32) tensor(2797, dtype=torch.int32)

Test set: Average loss: 0.0081, Accuracy: 6038/10000 (60.3800%)


Test set: Average loss: 0.0098, Accuracy: 116/5000.0 (23.2000%)

epoch: 15
Number of layers: 20
0
Old value, new value:
tensor(31., device='cuda:0') tensor(-4., device='cuda:0')
Old value, new value:
tensor(4., device='cuda:0') tensor(-1., device='cuda:0')
Layer numer, Index Number:  tensor(1, dtype=torch.int32) tensor(782, dtype=torch.int32)

Test set: Average loss: 0.0089, Accuracy: 5836/10000 (58.3600%)


Test set: Average loss: 0.0110, Accuracy: 90/5000.0 (18.0000%)

epoch: 16
Number of layers: 20

Test set: Average loss: 0.0089, Accuracy: 5836/10000 (58.3600%)


Test set: Average loss: 0.0110, Accuracy: 90/5000.0 (18.0000%)

epoch: 17
Number of layers: 20

Test set: Average loss: 0.0089, Accuracy: 5836/10000 (58.3600%)


Test set: Average loss: 0.0110, Accuracy: 90/5000.0 (18.0000%)

epoch: 18
Number of layers: 20
0
Old value, new value:
tensor(5., device='cuda:0') tensor(33., device='cuda:0')
Old value, new value:
tensor(-33., device='cuda:0') tensor(16., device='cuda:0')
Layer numer, Index Number:  tensor(7, dtype=torch.int32) tensor(1786, dtype=torch.int32)

Test set: Average loss: 0.0105, Accuracy: 5423/10000 (54.2300%)


Test set: Average loss: 0.0124, Accuracy: 72/5000.0 (14.4000%)

epoch: 19
Number of layers: 20
0
Old value, new value:
tensor(28., device='cuda:0') tensor(2., device='cuda:0')
Old value, new value:
tensor(41., device='cuda:0') tensor(9., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(219, dtype=torch.int32)

Test set: Average loss: 0.0112, Accuracy: 5328/10000 (53.2800%)


Test set: Average loss: 0.0136, Accuracy: 59/5000.0 (11.8000%)

epoch: 20
Number of layers: 20

Test set: Average loss: 0.0112, Accuracy: 5328/10000 (53.2800%)


Test set: Average loss: 0.0136, Accuracy: 59/5000.0 (11.8000%)

epoch: 21
Number of layers: 20
0
Old value, new value:
tensor(75., device='cuda:0') tensor(21., device='cuda:0')
Old value, new value:
tensor(122., device='cuda:0') tensor(-50., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(1965, dtype=torch.int32)

Test set: Average loss: 0.0123, Accuracy: 5052/10000 (50.5200%)


Test set: Average loss: 0.0154, Accuracy: 41/5000.0 (8.2000%)

epoch: 22
Number of layers: 20

Test set: Average loss: 0.0123, Accuracy: 5052/10000 (50.5200%)


Test set: Average loss: 0.0154, Accuracy: 41/5000.0 (8.2000%)

epoch: 23
Number of layers: 20

Test set: Average loss: 0.0123, Accuracy: 5052/10000 (50.5200%)


Test set: Average loss: 0.0154, Accuracy: 41/5000.0 (8.2000%)

epoch: 24
Number of layers: 20
0
Old value, new value:
tensor(-5., device='cuda:0') tensor(-6., device='cuda:0')
Old value, new value:
tensor(-4., device='cuda:0') tensor(9., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(588, dtype=torch.int32)

Test set: Average loss: 0.0129, Accuracy: 4938/10000 (49.3800%)


Test set: Average loss: 0.0168, Accuracy: 30/5000.0 (6.0000%)

epoch: 25
Number of layers: 20
0
Old value, new value:
tensor(10., device='cuda:0') tensor(11., device='cuda:0')
Old value, new value:
tensor(13., device='cuda:0') tensor(-1., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(76, dtype=torch.int32)

Test set: Average loss: 0.0133, Accuracy: 4907/10000 (49.0700%)


Test set: Average loss: 0.0190, Accuracy: 14/5000.0 (2.8000%)

epoch: 26
Number of layers: 20

Test set: Average loss: 0.0133, Accuracy: 4907/10000 (49.0700%)


Test set: Average loss: 0.0190, Accuracy: 14/5000.0 (2.8000%)

epoch: 27
Number of layers: 20

Test set: Average loss: 0.0133, Accuracy: 4907/10000 (49.0700%)


Test set: Average loss: 0.0190, Accuracy: 14/5000.0 (2.8000%)

epoch: 28
Number of layers: 20

Test set: Average loss: 0.0133, Accuracy: 4907/10000 (49.0700%)


Test set: Average loss: 0.0190, Accuracy: 14/5000.0 (2.8000%)

epoch: 29
Number of layers: 20
0
Old value, new value:
tensor(19., device='cuda:0') tensor(12., device='cuda:0')
Old value, new value:
tensor(58., device='cuda:0') tensor(-18., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(237, dtype=torch.int32)

Test set: Average loss: 0.0150, Accuracy: 4556/10000 (45.5600%)


Test set: Average loss: 0.0203, Accuracy: 8/5000.0 (1.6000%)

torch.Size([16])
torch.Size([2])
torch.Size([0])
torch.Size([2])
torch.Size([0])
torch.Size([4])
torch.Size([0])
torch.Size([4])
torch.Size([0])
torch.Size([2])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([6])
CifarResNet : Depth : 20 , Layers for each block : 3
/home/asrakin/updating/github/model.py:312: UserWarning: nn.init.kaiming_normal is now deprecated in favor of nn.init.kaiming_normal_.
  init.kaiming_normal(m.weight)
Files already downloaded and verified
torch.Size([16, 3, 3, 3]) 1
torch.Size([16, 16, 3, 3]) 2
torch.Size([16, 16, 3, 3]) 3
torch.Size([16, 16, 3, 3]) 4
torch.Size([16, 16, 3, 3]) 5
torch.Size([16, 16, 3, 3]) 6
torch.Size([16, 16, 3, 3]) 7
torch.Size([32, 16, 3, 3]) 8
torch.Size([32, 32, 3, 3]) 9
torch.Size([32, 32, 3, 3]) 10
torch.Size([32, 32, 3, 3]) 11
torch.Size([32, 32, 3, 3]) 12
torch.Size([32, 32, 3, 3]) 13
torch.Size([64, 32, 3, 3]) 14
torch.Size([64, 64, 3, 3]) 15
torch.Size([64, 64, 3, 3]) 16
torch.Size([64, 64, 3, 3]) 17
torch.Size([64, 64, 3, 3]) 18
torch.Size([64, 64, 3, 3]) 19
torch.Size([10, 64]) 20

Test set: Average loss: 0.0013, Accuracy: 9077/10000 (90.7700%)

torch.Size([500])
torch.Size([20, 36864])
epoch: 1
Number of layers: 20
0
Old value, new value:
tensor(53., device='cuda:0') tensor(-70., device='cuda:0')
Old value, new value:
tensor(98., device='cuda:0') tensor(45., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(21, dtype=torch.int32)

Test set: Average loss: 0.0016, Accuracy: 8902/10000 (89.0200%)


Test set: Average loss: 0.0008, Accuracy: 444/5000.0 (88.8000%)

epoch: 2
Number of layers: 20
0
Old value, new value:
tensor(43., device='cuda:0') tensor(-46., device='cuda:0')
Old value, new value:
tensor(-1., device='cuda:0') tensor(-70., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(18, dtype=torch.int32)

Test set: Average loss: 0.0028, Accuracy: 8412/10000 (84.1200%)


Test set: Average loss: 0.0014, Accuracy: 414/5000.0 (82.8000%)

epoch: 3
Number of layers: 20

Test set: Average loss: 0.0028, Accuracy: 8412/10000 (84.1200%)


Test set: Average loss: 0.0014, Accuracy: 414/5000.0 (82.8000%)

epoch: 4
Number of layers: 20
0
Old value, new value:
tensor(8., device='cuda:0') tensor(-4., device='cuda:0')
Old value, new value:
tensor(-1., device='cuda:0') tensor(-3., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(64, dtype=torch.int32)

Test set: Average loss: 0.0029, Accuracy: 8377/10000 (83.7700%)


Test set: Average loss: 0.0018, Accuracy: 391/5000.0 (78.2000%)

epoch: 5
Number of layers: 20
0
Old value, new value:
tensor(98., device='cuda:0') tensor(-9., device='cuda:0')
Old value, new value:
tensor(16., device='cuda:0') tensor(-60., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(13, dtype=torch.int32)

Test set: Average loss: 0.0071, Accuracy: 7012/10000 (70.1200%)


Test set: Average loss: 0.0030, Accuracy: 337/5000.0 (67.4000%)

epoch: 6
Number of layers: 20
0
Old value, new value:
tensor(-8., device='cuda:0') tensor(66., device='cuda:0')
Old value, new value:
tensor(-21., device='cuda:0') tensor(-3., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(433, dtype=torch.int32)

Test set: Average loss: 0.0066, Accuracy: 7066/10000 (70.6600%)


Test set: Average loss: 0.0045, Accuracy: 279/5000.0 (55.8000%)

epoch: 7
Number of layers: 20
0
Old value, new value:
tensor(75., device='cuda:0') tensor(21., device='cuda:0')
Old value, new value:
tensor(122., device='cuda:0') tensor(-50., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(1965, dtype=torch.int32)

Test set: Average loss: 0.0082, Accuracy: 6373/10000 (63.7300%)


Test set: Average loss: 0.0074, Accuracy: 163/5000.0 (32.6000%)

epoch: 8
Number of layers: 20
0
Old value, new value:
tensor(79., device='cuda:0') tensor(-72., device='cuda:0')
Old value, new value:
tensor(-6., device='cuda:0') tensor(42., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(363, dtype=torch.int32)

Test set: Average loss: 0.0090, Accuracy: 6120/10000 (61.2000%)


Test set: Average loss: 0.0090, Accuracy: 129/5000.0 (25.8000%)

epoch: 9
Number of layers: 20

Test set: Average loss: 0.0090, Accuracy: 6120/10000 (61.2000%)


Test set: Average loss: 0.0090, Accuracy: 129/5000.0 (25.8000%)

epoch: 10
Number of layers: 20

Test set: Average loss: 0.0090, Accuracy: 6120/10000 (61.2000%)


Test set: Average loss: 0.0090, Accuracy: 129/5000.0 (25.8000%)

epoch: 11
Number of layers: 20

Test set: Average loss: 0.0090, Accuracy: 6120/10000 (61.2000%)


Test set: Average loss: 0.0090, Accuracy: 129/5000.0 (25.8000%)

epoch: 12
Number of layers: 20
0
Old value, new value:
tensor(61., device='cuda:0') tensor(-65., device='cuda:0')
Old value, new value:
tensor(-4., device='cuda:0') tensor(23., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(354, dtype=torch.int32)

Test set: Average loss: 0.0104, Accuracy: 5693/10000 (56.9300%)


Test set: Average loss: 0.0108, Accuracy: 99/5000.0 (19.8000%)

epoch: 13
Number of layers: 20
0
Old value, new value:
tensor(-64., device='cuda:0') tensor(66., device='cuda:0')
Old value, new value:
tensor(-73., device='cuda:0') tensor(-38., device='cuda:0')
Layer numer, Index Number:  tensor(9, dtype=torch.int32) tensor(4234, dtype=torch.int32)

Test set: Average loss: 0.0139, Accuracy: 4940/10000 (49.4000%)


Test set: Average loss: 0.0137, Accuracy: 58/5000.0 (11.6000%)

epoch: 14
Number of layers: 20

Test set: Average loss: 0.0139, Accuracy: 4940/10000 (49.4000%)


Test set: Average loss: 0.0137, Accuracy: 58/5000.0 (11.6000%)

epoch: 15
Number of layers: 20

Test set: Average loss: 0.0139, Accuracy: 4940/10000 (49.4000%)


Test set: Average loss: 0.0137, Accuracy: 58/5000.0 (11.6000%)

epoch: 16
Number of layers: 20
0
Old value, new value:
tensor(-26., device='cuda:0') tensor(66., device='cuda:0')
Old value, new value:
tensor(8., device='cuda:0') tensor(0., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(281, dtype=torch.int32)

Test set: Average loss: 0.0158, Accuracy: 4550/10000 (45.5000%)


Test set: Average loss: 0.0153, Accuracy: 44/5000.0 (8.8000%)

epoch: 17
Number of layers: 20
0
Old value, new value:
tensor(19., device='cuda:0') tensor(-127., device='cuda:0')
Old value, new value:
tensor(98., device='cuda:0') tensor(38., device='cuda:0')
Layer numer, Index Number:  tensor(4, dtype=torch.int32) tensor(524, dtype=torch.int32)

Test set: Average loss: 0.0180, Accuracy: 4035/10000 (40.3500%)


Test set: Average loss: 0.0170, Accuracy: 29/5000.0 (5.8000%)

epoch: 18
Number of layers: 20
0
Old value, new value:
tensor(-48., device='cuda:0') tensor(-1., device='cuda:0')
Old value, new value:
tensor(-21., device='cuda:0') tensor(72., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(289, dtype=torch.int32)

Test set: Average loss: 0.0212, Accuracy: 3439/10000 (34.3900%)


Test set: Average loss: 0.0190, Accuracy: 15/5000.0 (3.0000%)

epoch: 19
Number of layers: 20
0
Old value, new value:
tensor(11., device='cuda:0') tensor(-6., device='cuda:0')
Old value, new value:
tensor(30., device='cuda:0') tensor(-49., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(307, dtype=torch.int32)

Test set: Average loss: 0.0236, Accuracy: 3111/10000 (31.1100%)


Test set: Average loss: 0.0202, Accuracy: 9/5000.0 (1.8000%)

torch.Size([16])
torch.Size([0])
torch.Size([0])
torch.Size([4])
torch.Size([2])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([2])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([2])
CifarResNet : Depth : 20 , Layers for each block : 3
/home/asrakin/updating/github/model.py:312: UserWarning: nn.init.kaiming_normal is now deprecated in favor of nn.init.kaiming_normal_.
  init.kaiming_normal(m.weight)
Files already downloaded and verified
torch.Size([16, 3, 3, 3]) 1
torch.Size([16, 16, 3, 3]) 2
torch.Size([16, 16, 3, 3]) 3
torch.Size([16, 16, 3, 3]) 4
torch.Size([16, 16, 3, 3]) 5
torch.Size([16, 16, 3, 3]) 6
torch.Size([16, 16, 3, 3]) 7
torch.Size([32, 16, 3, 3]) 8
torch.Size([32, 32, 3, 3]) 9
torch.Size([32, 32, 3, 3]) 10
torch.Size([32, 32, 3, 3]) 11
torch.Size([32, 32, 3, 3]) 12
torch.Size([32, 32, 3, 3]) 13
torch.Size([64, 32, 3, 3]) 14
torch.Size([64, 64, 3, 3]) 15
torch.Size([64, 64, 3, 3]) 16
torch.Size([64, 64, 3, 3]) 17
torch.Size([64, 64, 3, 3]) 18
torch.Size([64, 64, 3, 3]) 19
torch.Size([10, 64]) 20

Test set: Average loss: 0.0013, Accuracy: 9077/10000 (90.7700%)

torch.Size([500])
torch.Size([20, 36864])
epoch: 1
Number of layers: 20
0
Old value, new value:
tensor(-46., device='cuda:0') tensor(98., device='cuda:0')
Old value, new value:
tensor(53., device='cuda:0') tensor(-70., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(20, dtype=torch.int32)

Test set: Average loss: 0.0016, Accuracy: 8926/10000 (89.2600%)


Test set: Average loss: 0.0006, Accuracy: 460/5000.0 (92.0000%)

epoch: 2
Number of layers: 20
0
Old value, new value:
tensor(-22., device='cuda:0') tensor(-4., device='cuda:0')
Old value, new value:
tensor(61., device='cuda:0') tensor(-65., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(353, dtype=torch.int32)

Test set: Average loss: 0.0019, Accuracy: 8775/10000 (87.7500%)


Test set: Average loss: 0.0008, Accuracy: 441/5000.0 (88.2000%)

epoch: 3
Number of layers: 20

Test set: Average loss: 0.0019, Accuracy: 8775/10000 (87.7500%)


Test set: Average loss: 0.0008, Accuracy: 441/5000.0 (88.2000%)

epoch: 4
Number of layers: 20
0
Old value, new value:
tensor(18., device='cuda:0') tensor(-1., device='cuda:0')
Old value, new value:
tensor(-8., device='cuda:0') tensor(-2., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(89, dtype=torch.int32)

Test set: Average loss: 0.0019, Accuracy: 8725/10000 (87.2500%)


Test set: Average loss: 0.0012, Accuracy: 406/5000.0 (81.2000%)

epoch: 5
Number of layers: 20
0
Old value, new value:
tensor(98., device='cuda:0') tensor(-9., device='cuda:0')
Old value, new value:
tensor(16., device='cuda:0') tensor(-60., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(13, dtype=torch.int32)

Test set: Average loss: 0.0023, Accuracy: 8536/10000 (85.3600%)


Test set: Average loss: 0.0019, Accuracy: 382/5000.0 (76.4000%)

epoch: 6
Number of layers: 20
0
Old value, new value:
tensor(-87., device='cuda:0') tensor(8., device='cuda:0')
Old value, new value:
tensor(-26., device='cuda:0') tensor(66., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(280, dtype=torch.int32)

Test set: Average loss: 0.0030, Accuracy: 8162/10000 (81.6200%)


Test set: Average loss: 0.0028, Accuracy: 329/5000.0 (65.8000%)

epoch: 7
Number of layers: 20

Test set: Average loss: 0.0030, Accuracy: 8162/10000 (81.6200%)


Test set: Average loss: 0.0028, Accuracy: 329/5000.0 (65.8000%)

epoch: 8
Number of layers: 20

Test set: Average loss: 0.0030, Accuracy: 8162/10000 (81.6200%)


Test set: Average loss: 0.0028, Accuracy: 329/5000.0 (65.8000%)

epoch: 9
Number of layers: 20
0
Old value, new value:
tensor(41., device='cuda:0') tensor(-127., device='cuda:0')
Old value, new value:
tensor(-40., device='cuda:0') tensor(-73., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(1820, dtype=torch.int32)

Test set: Average loss: 0.0035, Accuracy: 7907/10000 (79.0700%)


Test set: Average loss: 0.0040, Accuracy: 285/5000.0 (57.0000%)

epoch: 10
Number of layers: 20
0
Old value, new value:
tensor(-24., device='cuda:0') tensor(-6., device='cuda:0')
Old value, new value:
tensor(79., device='cuda:0') tensor(-72., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(362, dtype=torch.int32)

Test set: Average loss: 0.0052, Accuracy: 7155/10000 (71.5500%)


Test set: Average loss: 0.0053, Accuracy: 231/5000.0 (46.2000%)

epoch: 11
Number of layers: 20
0
Old value, new value:
tensor(-7., device='cuda:0') tensor(-127., device='cuda:0')
Old value, new value:
tensor(47., device='cuda:0') tensor(24., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(92, dtype=torch.int32)

Test set: Average loss: 0.0069, Accuracy: 6449/10000 (64.4900%)


Test set: Average loss: 0.0068, Accuracy: 178/5000.0 (35.6000%)

epoch: 12
Number of layers: 20
0
Old value, new value:
tensor(-19., device='cuda:0') tensor(16., device='cuda:0')
Old value, new value:
tensor(-48., device='cuda:0') tensor(53., device='cuda:0')
Layer numer, Index Number:  tensor(7, dtype=torch.int32) tensor(1789, dtype=torch.int32)

Test set: Average loss: 0.0089, Accuracy: 5927/10000 (59.2700%)


Test set: Average loss: 0.0090, Accuracy: 132/5000.0 (26.4000%)

epoch: 13
Number of layers: 20

Test set: Average loss: 0.0089, Accuracy: 5927/10000 (59.2700%)


Test set: Average loss: 0.0090, Accuracy: 132/5000.0 (26.4000%)

epoch: 14
Number of layers: 20
0
Old value, new value:
tensor(44., device='cuda:0') tensor(-127., device='cuda:0')
Old value, new value:
tensor(-14., device='cuda:0') tensor(-5., device='cuda:0')
Layer numer, Index Number:  tensor(1, dtype=torch.int32) tensor(578, dtype=torch.int32)

Test set: Average loss: 0.0106, Accuracy: 5405/10000 (54.0500%)


Test set: Average loss: 0.0105, Accuracy: 100/5000.0 (20.0000%)

epoch: 15
Number of layers: 20
0
Old value, new value:
tensor(-5., device='cuda:0') tensor(-6., device='cuda:0')
Old value, new value:
tensor(-4., device='cuda:0') tensor(9., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(588, dtype=torch.int32)

Test set: Average loss: 0.0114, Accuracy: 5229/10000 (52.2900%)


Test set: Average loss: 0.0120, Accuracy: 66/5000.0 (13.2000%)

epoch: 16
Number of layers: 20

Test set: Average loss: 0.0114, Accuracy: 5229/10000 (52.2900%)


Test set: Average loss: 0.0120, Accuracy: 66/5000.0 (13.2000%)

epoch: 17
Number of layers: 20
0
Old value, new value:
tensor(-8., device='cuda:0') tensor(66., device='cuda:0')
Old value, new value:
tensor(-21., device='cuda:0') tensor(-3., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(433, dtype=torch.int32)

Test set: Average loss: 0.0129, Accuracy: 4883/10000 (48.8300%)


Test set: Average loss: 0.0144, Accuracy: 40/5000.0 (8.0000%)

epoch: 18
Number of layers: 20

Test set: Average loss: 0.0129, Accuracy: 4883/10000 (48.8300%)


Test set: Average loss: 0.0144, Accuracy: 40/5000.0 (8.0000%)

epoch: 19
Number of layers: 20
0
Old value, new value:
tensor(-9., device='cuda:0') tensor(6., device='cuda:0')
Old value, new value:
tensor(-65., device='cuda:0') tensor(64., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(2069, dtype=torch.int32)

Test set: Average loss: 0.0148, Accuracy: 4448/10000 (44.4800%)


Test set: Average loss: 0.0172, Accuracy: 21/5000.0 (4.2000%)

epoch: 20
Number of layers: 20
0
Old value, new value:
tensor(0., device='cuda:0') tensor(-3., device='cuda:0')
Old value, new value:
tensor(4., device='cuda:0') tensor(-4., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(96, dtype=torch.int32)

Test set: Average loss: 0.0153, Accuracy: 4432/10000 (44.3200%)


Test set: Average loss: 0.0196, Accuracy: 13/5000.0 (2.6000%)

epoch: 21
Number of layers: 20

Test set: Average loss: 0.0153, Accuracy: 4432/10000 (44.3200%)


Test set: Average loss: 0.0196, Accuracy: 13/5000.0 (2.6000%)

epoch: 22
Number of layers: 20
0
Old value, new value:
tensor(19., device='cuda:0') tensor(-127., device='cuda:0')
Old value, new value:
tensor(98., device='cuda:0') tensor(38., device='cuda:0')
Layer numer, Index Number:  tensor(4, dtype=torch.int32) tensor(524, dtype=torch.int32)

Test set: Average loss: 0.0172, Accuracy: 4067/10000 (40.6700%)


Test set: Average loss: 0.0212, Accuracy: 7/5000.0 (1.4000%)

torch.Size([12])
torch.Size([2])
torch.Size([0])
torch.Size([6])
torch.Size([2])
torch.Size([0])
torch.Size([0])
torch.Size([2])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([6])
