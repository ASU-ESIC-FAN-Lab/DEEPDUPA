Round 1

CifarResNet : Depth : 20 , Layers for each block : 3
/home/asrakin/updating/github/model.py:312: UserWarning: nn.init.kaiming_normal is now deprecated in favor of nn.init.kaiming_normal_.
  init.kaiming_normal(m.weight)
Downloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to ./cifar10/cifar-10-python.tar.gz
100.0%Extracting ./cifar10/cifar-10-python.tar.gz to ./cifar10
torch.Size([16, 3, 3, 3]) 1
torch.Size([16, 16, 3, 3]) 2
torch.Size([16, 16, 3, 3]) 3
torch.Size([16, 16, 3, 3]) 4
torch.Size([16, 16, 3, 3]) 5
torch.Size([16, 16, 3, 3]) 6
torch.Size([16, 16, 3, 3]) 7
torch.Size([32, 16, 3, 3]) 8
torch.Size([32, 32, 3, 3]) 9
torch.Size([32, 32, 3, 3]) 10
torch.Size([32, 32, 3, 3]) 11
torch.Size([32, 32, 3, 3]) 12
torch.Size([32, 32, 3, 3]) 13
torch.Size([64, 32, 3, 3]) 14
torch.Size([64, 64, 3, 3]) 15
torch.Size([64, 64, 3, 3]) 16
torch.Size([64, 64, 3, 3]) 17
torch.Size([64, 64, 3, 3]) 18
torch.Size([64, 64, 3, 3]) 19
torch.Size([10, 64]) 20

Test set: Average loss: 0.0013, Accuracy: 9077/10000 (90.7700%)

torch.Size([500])
torch.Size([20, 36864])
epoch: 1
Number of layers: 20
0
Old value, new value:
tensor(-70., device='cuda:0') tensor(-5., device='cuda:0')
Old value, new value:
tensor(-90., device='cuda:0') tensor(20., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(1068, dtype=torch.int32)

Test set: Average loss: 0.0017, Accuracy: 8838/10000 (88.3800%)


Test set: Average loss: 0.0012, Accuracy: 424/5000.0 (84.8000%)

epoch: 2
Number of layers: 20
0
Old value, new value:
tensor(53., device='cuda:0') tensor(-70., device='cuda:0')
Old value, new value:
tensor(98., device='cuda:0') tensor(45., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(21, dtype=torch.int32)

Test set: Average loss: 0.0020, Accuracy: 8662/10000 (86.6200%)


Test set: Average loss: 0.0018, Accuracy: 387/5000.0 (77.4000%)

epoch: 3
Number of layers: 20
0
Old value, new value:
tensor(-74., device='cuda:0') tensor(88., device='cuda:0')
Old value, new value:
tensor(22., device='cuda:0') tensor(-5., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(1065, dtype=torch.int32)

Test set: Average loss: 0.0038, Accuracy: 7671/10000 (76.7100%)


Test set: Average loss: 0.0047, Accuracy: 268/5000.0 (53.6000%)

epoch: 4
Number of layers: 20
0
Old value, new value:
tensor(46., device='cuda:0') tensor(-22., device='cuda:0')
Old value, new value:
tensor(36., device='cuda:0') tensor(-39., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(4, dtype=torch.int32)

Test set: Average loss: 0.0048, Accuracy: 7260/10000 (72.6000%)


Test set: Average loss: 0.0058, Accuracy: 221/5000.0 (44.2000%)

epoch: 5
Number of layers: 20
0

Test set: Average loss: 0.0048, Accuracy: 7260/10000 (72.6000%)


Test set: Average loss: 0.0058, Accuracy: 221/5000.0 (44.2000%)

epoch: 6
Number of layers: 20
0
Old value, new value:
tensor(-4., device='cuda:0') tensor(9., device='cuda:0')
Old value, new value:
tensor(-6., device='cuda:0') tensor(-3., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(589, dtype=torch.int32)

Test set: Average loss: 0.0053, Accuracy: 7029/10000 (70.2900%)


Test set: Average loss: 0.0072, Accuracy: 172/5000.0 (34.4000%)

epoch: 7
Number of layers: 20
0
Old value, new value:
tensor(-48., device='cuda:0') tensor(-1., device='cuda:0')
Old value, new value:
tensor(-21., device='cuda:0') tensor(72., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(289, dtype=torch.int32)

Test set: Average loss: 0.0055, Accuracy: 6965/10000 (69.6500%)


Test set: Average loss: 0.0079, Accuracy: 145/5000.0 (29.0000%)

epoch: 8
Number of layers: 20
0
Old value, new value:
tensor(0., device='cuda:0') tensor(31., device='cuda:0')
Old value, new value:
tensor(6., device='cuda:0') tensor(36., device='cuda:0')
Layer numer, Index Number:  tensor(4, dtype=torch.int32) tensor(1361, dtype=torch.int32)

Test set: Average loss: 0.0071, Accuracy: 6308/10000 (63.0800%)


Test set: Average loss: 0.0092, Accuracy: 112/5000.0 (22.4000%)

epoch: 9
Number of layers: 20
0
Old value, new value:
tensor(98., device='cuda:0') tensor(-9., device='cuda:0')
Old value, new value:
tensor(16., device='cuda:0') tensor(-60., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(13, dtype=torch.int32)

Test set: Average loss: 0.0116, Accuracy: 4884/10000 (48.8400%)


Test set: Average loss: 0.0104, Accuracy: 84/5000.0 (16.8000%)

epoch: 10
Number of layers: 20
0
Old value, new value:
tensor(18., device='cuda:0') tensor(-1., device='cuda:0')
Old value, new value:
tensor(-8., device='cuda:0') tensor(-2., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(89, dtype=torch.int32)

Test set: Average loss: 0.0119, Accuracy: 4818/10000 (48.1800%)


Test set: Average loss: 0.0118, Accuracy: 40/5000.0 (8.0000%)

epoch: 11
Number of layers: 20
0

Test set: Average loss: 0.0119, Accuracy: 4818/10000 (48.1800%)


Test set: Average loss: 0.0118, Accuracy: 40/5000.0 (8.0000%)

epoch: 12
Number of layers: 20
0
Old value, new value:
tensor(12., device='cuda:0') tensor(31., device='cuda:0')
Old value, new value:
tensor(-35., device='cuda:0') tensor(35., device='cuda:0')
Layer numer, Index Number:  tensor(8, dtype=torch.int32) tensor(3674, dtype=torch.int32)

Test set: Average loss: 0.0136, Accuracy: 4500/10000 (45.0000%)


Test set: Average loss: 0.0138, Accuracy: 32/5000.0 (6.4000%)

epoch: 13
Number of layers: 20
0

Test set: Average loss: 0.0136, Accuracy: 4500/10000 (45.0000%)


Test set: Average loss: 0.0138, Accuracy: 32/5000.0 (6.4000%)

epoch: 14
Number of layers: 20
0
Old value, new value:
tensor(0., device='cuda:0') tensor(12., device='cuda:0')
Old value, new value:
tensor(-5., device='cuda:0') tensor(1., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(600, dtype=torch.int32)

Test set: Average loss: 0.0147, Accuracy: 4272/10000 (42.7200%)


Test set: Average loss: 0.0155, Accuracy: 21/5000.0 (4.2000%)

epoch: 15
Number of layers: 20
0
Old value, new value:
tensor(-56., device='cuda:0') tensor(31., device='cuda:0')
Old value, new value:
tensor(-45., device='cuda:0') tensor(39., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(234, dtype=torch.int32)

Test set: Average loss: 0.0168, Accuracy: 3852/10000 (38.5200%)


Test set: Average loss: 0.0164, Accuracy: 20/5000.0 (4.0000%)

epoch: 16
Number of layers: 20
0
Old value, new value:
tensor(4., device='cuda:0') tensor(-4., device='cuda:0')
Old value, new value:
tensor(-3., device='cuda:0') tensor(-2., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(97, dtype=torch.int32)

Test set: Average loss: 0.0171, Accuracy: 3849/10000 (38.4900%)


Test set: Average loss: 0.0183, Accuracy: 16/5000.0 (3.2000%)

epoch: 17
Number of layers: 20
0
Old value, new value:
tensor(42., device='cuda:0') tensor(43., device='cuda:0')
Old value, new value:
tensor(90., device='cuda:0') tensor(-23., device='cuda:0')
Layer numer, Index Number:  tensor(8, dtype=torch.int32) tensor(1371, dtype=torch.int32)

Test set: Average loss: 0.0169, Accuracy: 4039/10000 (40.3900%)


Test set: Average loss: 0.0194, Accuracy: 18/5000.0 (3.6000%)

epoch: 18
Number of layers: 20
0
Old value, new value:
tensor(53., device='cuda:0') tensor(-19., device='cuda:0')
Old value, new value:
tensor(2., device='cuda:0') tensor(-4., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(229, dtype=torch.int32)

Test set: Average loss: 0.0184, Accuracy: 3730/10000 (37.3000%)


Test set: Average loss: 0.0200, Accuracy: 10/5000.0 (2.0000%)

epoch: 19
Number of layers: 20
0
Old value, new value:
tensor(28., device='cuda:0') tensor(2., device='cuda:0')
Old value, new value:
tensor(41., device='cuda:0') tensor(9., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(219, dtype=torch.int32)

Test set: Average loss: 0.0196, Accuracy: 3518/10000 (35.1800%)


Test set: Average loss: 0.0207, Accuracy: 10/5000.0 (2.0000%)

epoch: 20
Number of layers: 20
0

Test set: Average loss: 0.0196, Accuracy: 3518/10000 (35.1800%)


Test set: Average loss: 0.0207, Accuracy: 10/5000.0 (2.0000%)

epoch: 21
Number of layers: 20
0
Old value, new value:
tensor(2., device='cuda:0') tensor(127., device='cuda:0')
Old value, new value:
tensor(4., device='cuda:0') tensor(0., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(22, dtype=torch.int32)

Test set: Average loss: 0.0234, Accuracy: 3094/10000 (30.9400%)


Test set: Average loss: 0.0225, Accuracy: 10/5000.0 (2.0000%)

epoch: 22
Number of layers: 20
0
Old value, new value:
tensor(-7., device='cuda:0') tensor(56., device='cuda:0')
Old value, new value:
tensor(-34., device='cuda:0') tensor(11., device='cuda:0')
Layer numer, Index Number:  tensor(8, dtype=torch.int32) tensor(3637, dtype=torch.int32)

Test set: Average loss: 0.0255, Accuracy: 2895/10000 (28.9500%)


Test set: Average loss: 0.0239, Accuracy: 10/5000.0 (2.0000%)

epoch: 23
Number of layers: 20
0
Old value, new value:
tensor(61., device='cuda:0') tensor(-44., device='cuda:0')
Old value, new value:
tensor(44., device='cuda:0') tensor(-4., device='cuda:0')
Layer numer, Index Number:  tensor(7, dtype=torch.int32) tensor(445, dtype=torch.int32)

Test set: Average loss: 0.0260, Accuracy: 2965/10000 (29.6500%)


Test set: Average loss: 0.0249, Accuracy: 8/5000.0 (1.6000%)

epoch: 24
Number of layers: 20
1

Test set: Average loss: 0.0260, Accuracy: 2965/10000 (29.6500%)


Test set: Average loss: 0.0249, Accuracy: 8/5000.0 (1.6000%)

epoch: 25
Number of layers: 20
0
Old value, new value:
tensor(76., device='cuda:0') tensor(-93., device='cuda:0')
Old value, new value:
tensor(51., device='cuda:0') tensor(6., device='cuda:0')
Layer numer, Index Number:  tensor(5, dtype=torch.int32) tensor(1674, dtype=torch.int32)

Test set: Average loss: 0.0292, Accuracy: 2677/10000 (26.7700%)


Test set: Average loss: 0.0263, Accuracy: 7/5000.0 (1.4000%)

epoch: 26
Number of layers: 20
0
Old value, new value:
tensor(7., device='cuda:0') tensor(-1., device='cuda:0')
Old value, new value:
tensor(-1., device='cuda:0') tensor(-2., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(87, dtype=torch.int32)

Test set: Average loss: 0.0296, Accuracy: 2673/10000 (26.7300%)


Test set: Average loss: 0.0282, Accuracy: 4/5000.0 (0.8000%)

torch.Size([12])
torch.Size([0])
torch.Size([0])
torch.Size([6])
torch.Size([2])
torch.Size([2])
torch.Size([0])
torch.Size([2])
torch.Size([6])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([12])

Round 2CifarResNet : Depth : 20 , Layers for each block : 3
/home/asrakin/updating/github/model.py:312: UserWarning: nn.init.kaiming_normal is now deprecated in favor of nn.init.kaiming_normal_.
  init.kaiming_normal(m.weight)
Files already downloaded and verified
torch.Size([16, 3, 3, 3]) 1
torch.Size([16, 16, 3, 3]) 2
torch.Size([16, 16, 3, 3]) 3
torch.Size([16, 16, 3, 3]) 4
torch.Size([16, 16, 3, 3]) 5
torch.Size([16, 16, 3, 3]) 6
torch.Size([16, 16, 3, 3]) 7
torch.Size([32, 16, 3, 3]) 8
torch.Size([32, 32, 3, 3]) 9
torch.Size([32, 32, 3, 3]) 10
torch.Size([32, 32, 3, 3]) 11
torch.Size([32, 32, 3, 3]) 12
torch.Size([32, 32, 3, 3]) 13
torch.Size([64, 32, 3, 3]) 14
torch.Size([64, 64, 3, 3]) 15
torch.Size([64, 64, 3, 3]) 16
torch.Size([64, 64, 3, 3]) 17
torch.Size([64, 64, 3, 3]) 18
torch.Size([64, 64, 3, 3]) 19
torch.Size([10, 64]) 20

Test set: Average loss: 0.0013, Accuracy: 9077/10000 (90.7700%)

torch.Size([500])
torch.Size([20, 36864])
epoch: 1
Number of layers: 20
0
Old value, new value:
tensor(-73., device='cuda:0') tensor(36., device='cuda:0')
Old value, new value:
tensor(-43., device='cuda:0') tensor(24., device='cuda:0')
Layer numer, Index Number:  tensor(1, dtype=torch.int32) tensor(1210, dtype=torch.int32)

Test set: Average loss: 0.0017, Accuracy: 8869/10000 (88.6900%)


Test set: Average loss: 0.0012, Accuracy: 428/5000.0 (85.6000%)

epoch: 2
Number of layers: 20
0
Old value, new value:
tensor(-72., device='cuda:0') tensor(127., device='cuda:0')
Old value, new value:
tensor(-30., device='cuda:0') tensor(56., device='cuda:0')
Layer numer, Index Number:  tensor(11, dtype=torch.int32) tensor(8525, dtype=torch.int32)

Test set: Average loss: 0.0030, Accuracy: 8266/10000 (82.6600%)


Test set: Average loss: 0.0020, Accuracy: 384/5000.0 (76.8000%)

epoch: 3
Number of layers: 20
0
Old value, new value:
tensor(53., device='cuda:0') tensor(-70., device='cuda:0')
Old value, new value:
tensor(98., device='cuda:0') tensor(45., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(21, dtype=torch.int32)

Test set: Average loss: 0.0036, Accuracy: 7976/10000 (79.7600%)


Test set: Average loss: 0.0030, Accuracy: 341/5000.0 (68.2000%)

epoch: 4
Number of layers: 20
0
Old value, new value:
tensor(98., device='cuda:0') tensor(-9., device='cuda:0')
Old value, new value:
tensor(16., device='cuda:0') tensor(-60., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(13, dtype=torch.int32)

Test set: Average loss: 0.0053, Accuracy: 7289/10000 (72.8900%)


Test set: Average loss: 0.0045, Accuracy: 274/5000.0 (54.8000%)

epoch: 5
Number of layers: 20
0
Old value, new value:
tensor(18., device='cuda:0') tensor(-1., device='cuda:0')
Old value, new value:
tensor(-8., device='cuda:0') tensor(-2., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(89, dtype=torch.int32)

Test set: Average loss: 0.0055, Accuracy: 7184/10000 (71.8400%)


Test set: Average loss: 0.0054, Accuracy: 209/5000.0 (41.8000%)

epoch: 6
Number of layers: 20
0
Old value, new value:
tensor(-87., device='cuda:0') tensor(8., device='cuda:0')
Old value, new value:
tensor(-26., device='cuda:0') tensor(66., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(280, dtype=torch.int32)

Test set: Average loss: 0.0062, Accuracy: 6922/10000 (69.2200%)


Test set: Average loss: 0.0064, Accuracy: 171/5000.0 (34.2000%)

epoch: 7
Number of layers: 20
0
Old value, new value:
tensor(46., device='cuda:0') tensor(-22., device='cuda:0')
Old value, new value:
tensor(36., device='cuda:0') tensor(-39., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(4, dtype=torch.int32)

Test set: Average loss: 0.0099, Accuracy: 5873/10000 (58.7300%)


Test set: Average loss: 0.0075, Accuracy: 141/5000.0 (28.2000%)

epoch: 8
Number of layers: 20
0

Test set: Average loss: 0.0099, Accuracy: 5873/10000 (58.7300%)


Test set: Average loss: 0.0075, Accuracy: 141/5000.0 (28.2000%)

epoch: 9
Number of layers: 20
0
Old value, new value:
tensor(-8., device='cuda:0') tensor(66., device='cuda:0')
Old value, new value:
tensor(-21., device='cuda:0') tensor(-3., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(433, dtype=torch.int32)

Test set: Average loss: 0.0096, Accuracy: 5983/10000 (59.8300%)


Test set: Average loss: 0.0098, Accuracy: 103/5000.0 (20.6000%)

epoch: 10
Number of layers: 20
0
Old value, new value:
tensor(11., device='cuda:0') tensor(-3., device='cuda:0')
Old value, new value:
tensor(14., device='cuda:0') tensor(-1., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(78, dtype=torch.int32)

Test set: Average loss: 0.0106, Accuracy: 5827/10000 (58.2700%)


Test set: Average loss: 0.0147, Accuracy: 29/5000.0 (5.8000%)

epoch: 11
Number of layers: 20
0
Old value, new value:
tensor(56., device='cuda:0') tensor(41., device='cuda:0')
Old value, new value:
tensor(25., device='cuda:0') tensor(-10., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(1932, dtype=torch.int32)

Test set: Average loss: 0.0115, Accuracy: 5579/10000 (55.7900%)


Test set: Average loss: 0.0162, Accuracy: 20/5000.0 (4.0000%)

epoch: 12
Number of layers: 20
0

Test set: Average loss: 0.0115, Accuracy: 5579/10000 (55.7900%)


Test set: Average loss: 0.0162, Accuracy: 20/5000.0 (4.0000%)

epoch: 13
Number of layers: 20
0
Old value, new value:
tensor(8., device='cuda:0') tensor(-1., device='cuda:0')
Old value, new value:
tensor(-3., device='cuda:0') tensor(-8., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(118, dtype=torch.int32)

Test set: Average loss: 0.0118, Accuracy: 5565/10000 (55.6500%)


Test set: Average loss: 0.0179, Accuracy: 12/5000.0 (2.4000%)

epoch: 14
Number of layers: 20
0
Old value, new value:
tensor(-22., device='cuda:0') tensor(-4., device='cuda:0')
Old value, new value:
tensor(61., device='cuda:0') tensor(-65., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(353, dtype=torch.int32)

Test set: Average loss: 0.0131, Accuracy: 5233/10000 (52.3300%)


Test set: Average loss: 0.0195, Accuracy: 2/5000.0 (0.4000%)

torch.Size([10])
torch.Size([2])
torch.Size([0])
torch.Size([4])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([2])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([6])

roun3 :
CifarResNet : Depth : 20 , Layers for each block : 3
/home/asrakin/updating/github/model.py:312: UserWarning: nn.init.kaiming_normal is now deprecated in favor of nn.init.kaiming_normal_.
  init.kaiming_normal(m.weight)
Files already downloaded and verified
torch.Size([16, 3, 3, 3]) 1
torch.Size([16, 16, 3, 3]) 2
torch.Size([16, 16, 3, 3]) 3
torch.Size([16, 16, 3, 3]) 4
torch.Size([16, 16, 3, 3]) 5
torch.Size([16, 16, 3, 3]) 6
torch.Size([16, 16, 3, 3]) 7
torch.Size([32, 16, 3, 3]) 8
torch.Size([32, 32, 3, 3]) 9
torch.Size([32, 32, 3, 3]) 10
torch.Size([32, 32, 3, 3]) 11
torch.Size([32, 32, 3, 3]) 12
torch.Size([32, 32, 3, 3]) 13
torch.Size([64, 32, 3, 3]) 14
torch.Size([64, 64, 3, 3]) 15
torch.Size([64, 64, 3, 3]) 16
torch.Size([64, 64, 3, 3]) 17
torch.Size([64, 64, 3, 3]) 18
torch.Size([64, 64, 3, 3]) 19
torch.Size([10, 64]) 20

Test set: Average loss: 0.0013, Accuracy: 9077/10000 (90.7700%)

torch.Size([500])
torch.Size([20, 36864])
epoch: 1
Number of layers: 20
0
Old value, new value:
tensor(-46., device='cuda:0') tensor(98., device='cuda:0')
Old value, new value:
tensor(53., device='cuda:0') tensor(-70., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(20, dtype=torch.int32)

Test set: Average loss: 0.0016, Accuracy: 8926/10000 (89.2600%)


Test set: Average loss: 0.0006, Accuracy: 460/5000.0 (92.0000%)

epoch: 2
Number of layers: 20
0

Test set: Average loss: 0.0016, Accuracy: 8926/10000 (89.2600%)


Test set: Average loss: 0.0006, Accuracy: 460/5000.0 (92.0000%)

epoch: 3
Number of layers: 20
0
Old value, new value:
tensor(-5., device='cuda:0') tensor(-3., device='cuda:0')
Old value, new value:
tensor(8., device='cuda:0') tensor(-1., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(117, dtype=torch.int32)

Test set: Average loss: 0.0016, Accuracy: 8915/10000 (89.1500%)


Test set: Average loss: 0.0007, Accuracy: 452/5000.0 (90.4000%)

epoch: 4
Number of layers: 20
0
Old value, new value:
tensor(122., device='cuda:0') tensor(-50., device='cuda:0')
Old value, new value:
tensor(21., device='cuda:0') tensor(-67., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(1966, dtype=torch.int32)

Test set: Average loss: 0.0019, Accuracy: 8740/10000 (87.4000%)


Test set: Average loss: 0.0013, Accuracy: 410/5000.0 (82.0000%)

epoch: 5
Number of layers: 20
0
Old value, new value:
tensor(4., device='cuda:0') tensor(4., device='cuda:0')
Old value, new value:
tensor(2., device='cuda:0') tensor(127., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(21, dtype=torch.int32)

Test set: Average loss: 0.0057, Accuracy: 7699/10000 (76.9900%)


Test set: Average loss: 0.0017, Accuracy: 395/5000.0 (79.0000%)

epoch: 6
Number of layers: 20
0
Old value, new value:
tensor(98., device='cuda:0') tensor(-9., device='cuda:0')
Old value, new value:
tensor(16., device='cuda:0') tensor(-60., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(13, dtype=torch.int32)

Test set: Average loss: 0.0058, Accuracy: 7497/10000 (74.9700%)


Test set: Average loss: 0.0024, Accuracy: 368/5000.0 (73.6000%)

epoch: 7
Number of layers: 20
0

Test set: Average loss: 0.0058, Accuracy: 7497/10000 (74.9700%)


Test set: Average loss: 0.0024, Accuracy: 368/5000.0 (73.6000%)

epoch: 8
Number of layers: 20
0
Old value, new value:
tensor(-4., device='cuda:0') tensor(26., device='cuda:0')
Old value, new value:
tensor(-36., device='cuda:0') tensor(14., device='cuda:0')
Layer numer, Index Number:  tensor(1, dtype=torch.int32) tensor(1501, dtype=torch.int32)

Test set: Average loss: 0.0067, Accuracy: 7212/10000 (72.1200%)


Test set: Average loss: 0.0041, Accuracy: 305/5000.0 (61.0000%)

epoch: 9
Number of layers: 20
0

Test set: Average loss: 0.0067, Accuracy: 7212/10000 (72.1200%)


Test set: Average loss: 0.0041, Accuracy: 305/5000.0 (61.0000%)

epoch: 10
Number of layers: 20
0
Old value, new value:
tensor(-87., device='cuda:0') tensor(8., device='cuda:0')
Old value, new value:
tensor(-26., device='cuda:0') tensor(66., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(280, dtype=torch.int32)

Test set: Average loss: 0.0076, Accuracy: 6775/10000 (67.7500%)


Test set: Average loss: 0.0062, Accuracy: 226/5000.0 (45.2000%)

epoch: 11
Number of layers: 20
0
Old value, new value:
tensor(-48., device='cuda:0') tensor(-1., device='cuda:0')
Old value, new value:
tensor(-21., device='cuda:0') tensor(72., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(289, dtype=torch.int32)

Test set: Average loss: 0.0086, Accuracy: 6377/10000 (63.7700%)


Test set: Average loss: 0.0078, Accuracy: 176/5000.0 (35.2000%)

epoch: 12
Number of layers: 20
0
Old value, new value:
tensor(-4., device='cuda:0') tensor(4., device='cuda:0')
Old value, new value:
tensor(2., device='cuda:0') tensor(127., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(19, dtype=torch.int32)

Test set: Average loss: 0.0162, Accuracy: 5692/10000 (56.9200%)


Test set: Average loss: 0.0104, Accuracy: 129/5000.0 (25.8000%)

epoch: 13
Number of layers: 20
0
Old value, new value:
tensor(-37., device='cuda:0') tensor(43., device='cuda:0')
Old value, new value:
tensor(-26., device='cuda:0') tensor(30., device='cuda:0')
Layer numer, Index Number:  tensor(1, dtype=torch.int32) tensor(381, dtype=torch.int32)

Test set: Average loss: 0.0185, Accuracy: 5304/10000 (53.0400%)


Test set: Average loss: 0.0123, Accuracy: 110/5000.0 (22.0000%)

epoch: 14
Number of layers: 20
0
Old value, new value:
tensor(79., device='cuda:0') tensor(-72., device='cuda:0')
Old value, new value:
tensor(-6., device='cuda:0') tensor(42., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(363, dtype=torch.int32)

Test set: Average loss: 0.0216, Accuracy: 4741/10000 (47.4100%)


Test set: Average loss: 0.0147, Accuracy: 87/5000.0 (17.4000%)

epoch: 15
Number of layers: 20
0
Old value, new value:
tensor(-22., device='cuda:0') tensor(8., device='cuda:0')
Old value, new value:
tensor(-26., device='cuda:0') tensor(66., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(278, dtype=torch.int32)

Test set: Average loss: 0.0263, Accuracy: 4339/10000 (43.3900%)


Test set: Average loss: 0.0189, Accuracy: 68/5000.0 (13.6000%)

epoch: 16
Number of layers: 20
0
Old value, new value:
tensor(-29., device='cuda:0') tensor(9., device='cuda:0')
Old value, new value:
tensor(-3., device='cuda:0') tensor(48., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(271, dtype=torch.int32)

Test set: Average loss: 0.0301, Accuracy: 4025/10000 (40.2500%)


Test set: Average loss: 0.0221, Accuracy: 54/5000.0 (10.8000%)

epoch: 17
Number of layers: 20
0
Old value, new value:
tensor(21., device='cuda:0') tensor(35., device='cuda:0')
Old value, new value:
tensor(85., device='cuda:0') tensor(-41., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(1728, dtype=torch.int32)

Test set: Average loss: 0.0318, Accuracy: 3757/10000 (37.5700%)


Test set: Average loss: 0.0241, Accuracy: 45/5000.0 (9.0000%)

epoch: 18
Number of layers: 20
0
Old value, new value:
tensor(-25., device='cuda:0') tensor(17., device='cuda:0')
Old value, new value:
tensor(-23., device='cuda:0') tensor(22., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(303, dtype=torch.int32)

Test set: Average loss: 0.0339, Accuracy: 3705/10000 (37.0500%)


Test set: Average loss: 0.0258, Accuracy: 46/5000.0 (9.2000%)

epoch: 19
Number of layers: 20
0
Old value, new value:
tensor(-22., device='cuda:0') tensor(-4., device='cuda:0')
Old value, new value:
tensor(61., device='cuda:0') tensor(-65., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(353, dtype=torch.int32)

Test set: Average loss: 0.0371, Accuracy: 3284/10000 (32.8400%)


Test set: Average loss: 0.0281, Accuracy: 32/5000.0 (6.4000%)

epoch: 20
Number of layers: 20
0
Old value, new value:
tensor(6., device='cuda:0') tensor(8., device='cuda:0')
Old value, new value:
tensor(5., device='cuda:0') tensor(66., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(276, dtype=torch.int32)

Test set: Average loss: 0.0398, Accuracy: 3111/10000 (31.1100%)


Test set: Average loss: 0.0306, Accuracy: 29/5000.0 (5.8000%)

epoch: 21
Number of layers: 20
0
Old value, new value:
tensor(-15., device='cuda:0') tensor(76., device='cuda:0')
Old value, new value:
tensor(-57., device='cuda:0') tensor(50., device='cuda:0')
Layer numer, Index Number:  tensor(7, dtype=torch.int32) tensor(895, dtype=torch.int32)

Test set: Average loss: 0.0443, Accuracy: 2925/10000 (29.2500%)


Test set: Average loss: 0.0343, Accuracy: 20/5000.0 (4.0000%)

epoch: 22
Number of layers: 20
0
Old value, new value:
tensor(-83., device='cuda:0') tensor(76., device='cuda:0')
Old value, new value:
tensor(9., device='cuda:0') tensor(50., device='cuda:0')
Layer numer, Index Number:  tensor(7, dtype=torch.int32) tensor(893, dtype=torch.int32)

Test set: Average loss: 0.0533, Accuracy: 2507/10000 (25.0700%)


Test set: Average loss: 0.0409, Accuracy: 14/5000.0 (2.8000%)

epoch: 23
Number of layers: 20
0

Test set: Average loss: 0.0533, Accuracy: 2507/10000 (25.0700%)


Test set: Average loss: 0.0409, Accuracy: 14/5000.0 (2.8000%)

epoch: 24
Number of layers: 20
0

Test set: Average loss: 0.0533, Accuracy: 2507/10000 (25.0700%)


Test set: Average loss: 0.0409, Accuracy: 14/5000.0 (2.8000%)

epoch: 25
Number of layers: 20
0
Old value, new value:
tensor(-32., device='cuda:0') tensor(39., device='cuda:0')
Old value, new value:
tensor(-25., device='cuda:0') tensor(8., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(349, dtype=torch.int32)

Test set: Average loss: 0.0554, Accuracy: 2437/10000 (24.3700%)


Test set: Average loss: 0.0435, Accuracy: 11/5000.0 (2.2000%)

epoch: 26
Number of layers: 20
0
Old value, new value:
tensor(-19., device='cuda:0') tensor(20., device='cuda:0')
Old value, new value:
tensor(-22., device='cuda:0') tensor(-21., device='cuda:0')
Layer numer, Index Number:  tensor(7, dtype=torch.int32) tensor(865, dtype=torch.int32)

Test set: Average loss: 0.0587, Accuracy: 2291/10000 (22.9100%)


Test set: Average loss: 0.0459, Accuracy: 9/5000.0 (1.8000%)

epoch: 27
Number of layers: 20
0

Test set: Average loss: 0.0587, Accuracy: 2291/10000 (22.9100%)


Test set: Average loss: 0.0459, Accuracy: 9/5000.0 (1.8000%)

epoch: 28
Number of layers: 20
1
Old value, new value:
tensor(-6., device='cuda:0') tensor(6., device='cuda:0')
Old value, new value:
tensor(-11., device='cuda:0') tensor(2., device='cuda:0')
Layer numer, Index Number:  tensor(7, dtype=torch.int32) tensor(922, dtype=torch.int32)

Test set: Average loss: 0.0617, Accuracy: 2176/10000 (21.7600%)


Test set: Average loss: 0.0483, Accuracy: 9/5000.0 (1.8000%)

epoch: 29
Number of layers: 20
0
Old value, new value:
tensor(-33., device='cuda:0') tensor(21., device='cuda:0')
Old value, new value:
tensor(-34., device='cuda:0') tensor(1., device='cuda:0')
Layer numer, Index Number:  tensor(8, dtype=torch.int32) tensor(3643, dtype=torch.int32)

Test set: Average loss: 0.0656, Accuracy: 2061/10000 (20.6100%)


Test set: Average loss: 0.0527, Accuracy: 5/5000.0 (1.0000%)

epoch: 30
Number of layers: 20
0
Old value, new value:
tensor(-17., device='cuda:0') tensor(66., device='cuda:0')
Old value, new value:
tensor(-29., device='cuda:0') tensor(-9., device='cuda:0')
Layer numer, Index Number:  tensor(8, dtype=torch.int32) tensor(1662, dtype=torch.int32)

Test set: Average loss: 0.0679, Accuracy: 2018/10000 (20.1800%)


Test set: Average loss: 0.0546, Accuracy: 4/5000.0 (0.8000%)

torch.Size([22])
torch.Size([4])
torch.Size([0])
torch.Size([4])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([8])
torch.Size([4])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([5])
