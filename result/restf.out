CifarResNet : Depth : 20 , Layers for each block : 3
/home/asrakin/updated/github/model.py:312: UserWarning: nn.init.kaiming_normal is now deprecated in favor of nn.init.kaiming_normal_.
  init.kaiming_normal(m.weight)
Files already downloaded and verified
torch.Size([16, 3, 3, 3]) 1
torch.Size([16, 16, 3, 3]) 2
torch.Size([16, 16, 3, 3]) 3
torch.Size([16, 16, 3, 3]) 4
torch.Size([16, 16, 3, 3]) 5
torch.Size([16, 16, 3, 3]) 6
torch.Size([16, 16, 3, 3]) 7
torch.Size([32, 16, 3, 3]) 8
torch.Size([32, 32, 3, 3]) 9
torch.Size([32, 32, 3, 3]) 10
torch.Size([32, 32, 3, 3]) 11
torch.Size([32, 32, 3, 3]) 12
torch.Size([32, 32, 3, 3]) 13
torch.Size([64, 32, 3, 3]) 14
torch.Size([64, 64, 3, 3]) 15
torch.Size([64, 64, 3, 3]) 16
torch.Size([64, 64, 3, 3]) 17
torch.Size([64, 64, 3, 3]) 18
torch.Size([64, 64, 3, 3]) 19
torch.Size([10, 64]) 20

Test set: Average loss: 0.0013, Accuracy: 9077/10000 (90.7700%)

torch.Size([500])
torch.Size([20, 36864])
epoch: 1
Number of layers: 20
0
Old value, new value:
tensor(0., device='cuda:0') tensor(-7., device='cuda:0')
Old value, new value:
tensor(10., device='cuda:0') tensor(7., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(84, dtype=torch.int32)

Test set: Average loss: 0.0013, Accuracy: 9072/10000 (90.7200%)


Test set: Average loss: 0.0006, Accuracy: 461/5000.0 (92.2000%)

epoch: 2
Number of layers: 20
0
Old value, new value:
tensor(53., device='cuda:0') tensor(-70., device='cuda:0')
Old value, new value:
tensor(98., device='cuda:0') tensor(45., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(21, dtype=torch.int32)

Test set: Average loss: 0.0016, Accuracy: 8891/10000 (88.9100%)


Test set: Average loss: 0.0009, Accuracy: 435/5000.0 (87.0000%)

epoch: 3
Number of layers: 20
0
Old value, new value:
tensor(-70., device='cuda:0') tensor(-5., device='cuda:0')
Old value, new value:
tensor(-90., device='cuda:0') tensor(20., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(1068, dtype=torch.int32)

Test set: Average loss: 0.0020, Accuracy: 8638/10000 (86.3800%)


Test set: Average loss: 0.0020, Accuracy: 369/5000.0 (73.8000%)

epoch: 4
Number of layers: 20
0
Old value, new value:
tensor(4., device='cuda:0') tensor(-4., device='cuda:0')
Old value, new value:
tensor(-3., device='cuda:0') tensor(-2., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(97, dtype=torch.int32)

Test set: Average loss: 0.0021, Accuracy: 8605/10000 (86.0500%)


Test set: Average loss: 0.0024, Accuracy: 355/5000.0 (71.0000%)

epoch: 5
Number of layers: 20
0
Old value, new value:
tensor(11., device='cuda:0') tensor(-3., device='cuda:0')
Old value, new value:
tensor(14., device='cuda:0') tensor(-1., device='cuda:0')
Layer numer, Index Number:  tensor(19, dtype=torch.int32) tensor(78, dtype=torch.int32)

Test set: Average loss: 0.0026, Accuracy: 8391/10000 (83.9100%)


Test set: Average loss: 0.0048, Accuracy: 254/5000.0 (50.8000%)

epoch: 6
Number of layers: 20
0
Old value, new value:
tensor(98., device='cuda:0') tensor(-9., device='cuda:0')
Old value, new value:
tensor(16., device='cuda:0') tensor(-60., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(13, dtype=torch.int32)

Test set: Average loss: 0.0042, Accuracy: 7772/10000 (77.7200%)


Test set: Average loss: 0.0068, Accuracy: 194/5000.0 (38.8000%)

epoch: 7
Number of layers: 20
0
Old value, new value:
tensor(43., device='cuda:0') tensor(-46., device='cuda:0')
Old value, new value:
tensor(-1., device='cuda:0') tensor(-70., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(18, dtype=torch.int32)

Test set: Average loss: 0.0078, Accuracy: 6660/10000 (66.6000%)


Test set: Average loss: 0.0087, Accuracy: 131/5000.0 (26.2000%)

epoch: 8
Number of layers: 20
0
Old value, new value:
tensor(-8., device='cuda:0') tensor(66., device='cuda:0')
Old value, new value:
tensor(-21., device='cuda:0') tensor(-3., device='cuda:0')
Layer numer, Index Number:  tensor(3, dtype=torch.int32) tensor(433, dtype=torch.int32)

Test set: Average loss: 0.0076, Accuracy: 6666/10000 (66.6600%)


Test set: Average loss: 0.0109, Accuracy: 90/5000.0 (18.0000%)

epoch: 9
Number of layers: 20
0
Old value, new value:
tensor(-24., device='cuda:0') tensor(-6., device='cuda:0')
Old value, new value:
tensor(79., device='cuda:0') tensor(-72., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(362, dtype=torch.int32)

Test set: Average loss: 0.0085, Accuracy: 6347/10000 (63.4700%)


Test set: Average loss: 0.0123, Accuracy: 69/5000.0 (13.8000%)

epoch: 10
Number of layers: 20
0
Old value, new value:
tensor(-7., device='cuda:0') tensor(-127., device='cuda:0')
Old value, new value:
tensor(47., device='cuda:0') tensor(24., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(92, dtype=torch.int32)

Test set: Average loss: 0.0102, Accuracy: 5778/10000 (57.7800%)


Test set: Average loss: 0.0144, Accuracy: 46/5000.0 (9.2000%)

epoch: 11
Number of layers: 20
0
Old value, new value:
tensor(26., device='cuda:0') tensor(-25., device='cuda:0')
Old value, new value:
tensor(13., device='cuda:0') tensor(-127., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(89, dtype=torch.int32)

Test set: Average loss: 0.0130, Accuracy: 5015/10000 (50.1500%)


Test set: Average loss: 0.0168, Accuracy: 23/5000.0 (4.6000%)

epoch: 12
Number of layers: 20
0
Old value, new value:
tensor(-28., device='cuda:0') tensor(-10., device='cuda:0')
Old value, new value:
tensor(-54., device='cuda:0') tensor(10., device='cuda:0')
Layer numer, Index Number:  tensor(9, dtype=torch.int32) tensor(2797, dtype=torch.int32)

Test set: Average loss: 0.0142, Accuracy: 4838/10000 (48.3800%)


Test set: Average loss: 0.0179, Accuracy: 18/5000.0 (3.6000%)

epoch: 13
Number of layers: 20
0
Old value, new value:
tensor(-22., device='cuda:0') tensor(-4., device='cuda:0')
Old value, new value:
tensor(61., device='cuda:0') tensor(-65., device='cuda:0')
Layer numer, Index Number:  tensor(0, dtype=torch.int32) tensor(353, dtype=torch.int32)

Test set: Average loss: 0.0167, Accuracy: 4294/10000 (42.9400%)


Test set: Average loss: 0.0199, Accuracy: 11/5000.0 (2.2000%)

epoch: 14
Number of layers: 20
0
Old value, new value:
tensor(-37., device='cuda:0') tensor(43., device='cuda:0')
Old value, new value:
tensor(-26., device='cuda:0') tensor(30., device='cuda:0')
Layer numer, Index Number:  tensor(1, dtype=torch.int32) tensor(381, dtype=torch.int32)

Test set: Average loss: 0.0178, Accuracy: 4113/10000 (41.1300%)


Test set: Average loss: 0.0216, Accuracy: 4/5000.0 (0.8000%)

torch.Size([14])
torch.Size([2])
torch.Size([0])
torch.Size([4])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([2])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([0])
torch.Size([6])
